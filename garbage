<?php

//=====================================================================
// The Garbage CMS command line
// Used for development,
// executed site wide actions,
// and
// Experimenting and testing things
// Based on Laravel's Artisan, something I wanted to try to make myself
//
// - Runonstof
//
//=====================================================================

require './vendor/autoload.php';
require './functions.php';

//=================================================================
//.env contains sensitive data
//.env.example contains what settings need to be there
//for you to set locally
// (I know we need this bc I worked with some
// frameworks and they used dotenv as well, nothing too savy)
// We use the composer package 'vlucas/dotenv' for this
//=================================================================

$dotenv = Dotenv\Dotenv::create(__DIR__.'\\');
$dotenv->load();

require_files('App\\');

require './routes.php';

use App\CommandLine\Command;
use App\DB;
use App\CommandLine\Output;
use App\User;
use Jenssegers\Blade\Blade;
$blades = new Blade('views', 'cache');
$output = new Output;

Command::registerDefaultCommands();

$user = new User;

shell_start:
echo 
    $output->getColoredString("garbage-cms", "red", "cyan") .
    " " .
    $output->getColoredString("v1.0", "blue","green") .
    " " .
    $output->getColoredString("Created by Runonstof\n", "dark_gray", "light_gray");



shell:

$cmd = trim(readline(" >>> "));
try {
    if($cmd != '') {
        readline_add_history($cmd); //Adds last command to history so you can use up-arrow-key to navigate to history

        $matched = false;
        foreach(Command::all() as $command) {
            if($command->match($cmd, $vars)) {
                $matched = true;
                $command->execute($vars);
                break;
            }
        }

        if(!$matched) {
            $commandOutput = eval('return '.$cmd.';');
            var_dump($commandOutput);
        }
    }
} catch(Exception $exc) {
    var_dump($exc);
}

goto shell;